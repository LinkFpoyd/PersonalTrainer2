{"version":3,"sources":["components/Trainlist.js","components/Frontpage.js","components/Addcustomer.js","components/Addtraining.js","components/Editcustomer.js","components/Custlist.js","components/Scheduler.js","App.js","reportWebVitals.js","index.js"],"names":["Trainlist","useState","trains","setTrains","open","setOpen","useEffect","fetchData","fetch","then","result","json","data","console","log","handleClose","event","reason","columns","Header","accessor","Cell","props","moment","value","format","row","Button","size","color","onClick","id","window","confirm","method","res","catch","err","error","filterable","sortable","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","IconButton","aria-label","fontSize","Frontpage","Addcustomer","firstname","lastname","email","phone","streetadress","postcode","city","customer","setCustomer","handleInputChange","target","name","style","margin","variant","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","onChange","label","fullWidth","streetaddress","DialogActions","saveCustomer","Addtraining","date","activity","duration","training","setTraining","cust","type","saveTraining","Editcustomer","updateCustomer","link","Custlist","customers","setCustomers","content","headers","body","JSON","stringify","original","Scheduler","trainings","setTrainings","formatTrainings","map","train","title","start","plugins","dayGridPlugin","timeGridPlugin","headerToolbar","left","center","right","initialView","events","App","className","AppBar","position","Toolbar","Typography","to","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1a481bd.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport moment from 'moment';\r\n\r\nexport default function Trainlist (){\r\n\r\n  const [trains, setTrains] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const fetchData = () => {\r\n    fetch('https://customerrest.herokuapp.com/gettrainings')\r\n    .then(result => result.json())\r\n    .then(data => setTrains(data))\r\n    console.log(trains);\r\n  }\r\n\r\n  const deleteTraining = (id) => {\r\n    if (window.confirm('Are you sure?')){\r\n      fetch('https://customerrest.herokuapp.com/api/trainings/' + id, {method: 'DELETE'})\r\n      .then(res => fetchData())\r\n      .catch(err => console.error(err))\r\n      setOpen(true);\r\n      } \r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      Header: 'ID',\r\n      accessor: 'id'\r\n    },\r\n    {\r\n      Header: 'Date',\r\n      accessor: 'date',\r\n      Cell: (props)=>{\r\n        return moment(props.value).format('DD/MM/YYYY HH:mm')\r\n      }\r\n    },\r\n    {\r\n      Header: 'Duration (min)',\r\n      accessor: 'duration'\r\n    },\r\n    {\r\n      Header: 'Activity',\r\n      accessor: 'activity'\r\n    },\r\n    {\r\n      Header: 'Customer ID',\r\n      accessor: 'customer.id'\r\n    },\r\n    {\r\n      Header: 'First Name',\r\n      accessor: 'customer.firstname'\r\n    },\r\n    {\r\n      Header: 'Last Name',\r\n      accessor: 'customer.lastname'\r\n    },\r\n    {\r\n      accessor: 'id',\r\n      Cell: (row) => <Button size=\"small\" color=\"secondary\" onClick={() => deleteTraining(row.value)}>Delete</Button>,\r\n      filterable: false,\r\n      sortable: false\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ReactTable filterable={true} sortable={true} data={trains} columns={columns} />\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Training deleted\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst Frontpage = () => {\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to the frontpage</h1>\r\n      <p>Please select a site from the list above</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Frontpage;","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Addcustomer(props) {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [customer, setCustomer] = useState({\r\n    firstname:'', lastname: '', email: '', phone: '', streetadress: '', postcode: '', city: ''\r\n  })\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setCustomer({...customer, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const addCustomer = () => {\r\n    props.saveCustomer(customer);\r\n    handleClose();\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Button style={{margin: 10}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add Customer\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">New Car</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              name=\"firstname\"\r\n              value={customer.firstname}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"First Name\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"lastname\"\r\n              value={customer.lastname}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Last Name\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"email\"\r\n              value={customer.email}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"E-mail\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"phone\"\r\n              value={customer.phone}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Phone\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"streetaddress\"\r\n              value={customer.streetaddress}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Street Address\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"postcode\"\r\n              value={customer.postcode}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Post code\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"city\"\r\n              value={customer.city}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"City\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n        <DialogActions>\r\n         <Button onClick={handleClose} color=\"primary\">\r\n           Cancel\r\n         </Button>\r\n         <Button onClick={addCustomer} color=\"primary\">\r\n           Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}","import React, { useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Addtraining(props) {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [training, setTraining] = useState({\r\n    date:'', activity: '', duration: '', customer: ''\r\n  })\r\n \r\n\r\n  // comment for github testing purposes\r\n  const handleClickOpen = () => {\r\n    setTraining({date: '', activity: '', duration: '', customer: props.cust});\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setTraining({...training, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const addTraining = () => {\r\n    props.saveTraining(training);\r\n    handleClose();\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Button style={{margin: 10}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Add Training\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">New Training</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              name=\"date\"\r\n              type=\"datetime-local\"\r\n              value={training.date}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Date\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"activity\"\r\n              value={training.activity}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Activity\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"duration\"\r\n              value={training.duration}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Duration\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"customer\"\r\n              value={training.customer}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Customer\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n        <DialogActions>\r\n         <Button onClick={handleClose} color=\"primary\">\r\n           Cancel\r\n         </Button>\r\n         <Button onClick={addTraining} color=\"primary\">\r\n           Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Editcustomer(props) {\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [customer, setCustomer] = useState({\r\n    firstname:'', lastname: '', email: '', phone: '', streetadress: '', postcode: '', city: ''\r\n  })\r\n\r\n  const handleClickOpen = () => {\r\n    setCustomer({firstname: props.cust.firstname, lastname: props.cust.lastname,\r\n      email: props.cust.email, phone: props.cust.phone, streetaddress: props.cust.streetaddress,\r\n      postcode: props.cust.postcode, city: props.cust.city});\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setCustomer({...customer, [event.target.name]: event.target.value})\r\n  }\r\n\r\n  const putCustomer = () => {\r\n    props.updateCustomer(customer, props.link);\r\n    handleClose();\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <Button style={{margin: 10}} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Edit Customer</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              name=\"firstname\"\r\n              value={customer.firstname}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"First Name\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"lastname\"\r\n              value={customer.lastname}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Last Name\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"email\"\r\n              value={customer.email}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"E-mail\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"phone\"\r\n              value={customer.phone}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Phone\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"streetaddress\"\r\n              value={customer.streetaddress}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Street Address\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"postcode\"\r\n              value={customer.postcode}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"Post code\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              name=\"city\"\r\n              value={customer.city}\r\n              onChange={event => handleInputChange(event)}\r\n              label=\"City\"\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n        <DialogActions>\r\n         <Button onClick={handleClose} color=\"primary\">\r\n           Cancel\r\n         </Button>\r\n         <Button onClick={putCustomer} color=\"primary\">\r\n           Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Addcustomer from './Addcustomer';\r\nimport Addtraining from './Addtraining';\r\nimport Editcustomer from './Editcustomer';\r\n\r\nexport default function Custlist (){\r\n\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const fetchData = () => {\r\n    fetch('https://customerrest.herokuapp.com/api/customers')\r\n    .then(result => result.json())\r\n    .then(data => setCustomers(data.content))\r\n  }\r\n\r\n  const deleteCustomer = (link) => {\r\n    if (window.confirm('Are you sure?')){\r\n      fetch(link, {method: 'DELETE'})\r\n      .then(res => fetchData())\r\n      .catch(err => console.error(err))\r\n      setOpen(true);\r\n      } \r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    setOpen(false);\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const saveCustomer = (customer) => {\r\n    fetch('https://customerrest.herokuapp.com/api/customers', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(customer)\r\n    })\r\n    .then(res => fetchData())\r\n    .catch(err => console.error(err))\r\n  }\r\n\r\n  const saveTraining = (training) => {\r\n    fetch('https://customerrest.herokuapp.com/api/trainings', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(training)\r\n    })\r\n    .then(res => fetchData())\r\n    .catch(err => console.error(err))\r\n  }\r\n\r\n  const updateCustomer = (customer, link) => {\r\n    fetch(link, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(customer)\r\n    })\r\n    .then(res=> fetchData())\r\n    .catch(err => console.error(err))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      Header: 'First Name',\r\n      accessor: 'firstname'\r\n    },\r\n    {\r\n      Header: 'Last Name',\r\n      accessor: 'lastname'\r\n    },\r\n    {\r\n      Header: 'Street Address',\r\n      accessor: 'streetaddress'\r\n    },\r\n    {\r\n      Header: 'Post code',\r\n      accessor: 'postcode'\r\n    },\r\n    {\r\n      Header: 'City',\r\n      accessor: 'city'\r\n    },\r\n    {\r\n      Header: 'E-mail',\r\n      accessor: 'email'\r\n    },\r\n    {\r\n      Header: 'Phone',\r\n      accessor: 'phone'\r\n    },\r\n    { \r\n      accessor: 'links.0.href',\r\n      Cell: (row) => <Button size=\"small\" color=\"secondary\" onClick={() => deleteCustomer(row.value)}>Delete</Button>,\r\n      filterable: false,\r\n      sortable: false\r\n    },\r\n    { \r\n      accessor: 'links.0.href',\r\n      Cell: (row) => <Editcustomer link={row.value} updateCustomer={updateCustomer} cust={row.original} />,\r\n      filterable: false,\r\n      sortable: false\r\n    },\r\n    {\r\n      accessor: 'links.0.href',\r\n      Cell: (row) => <Addtraining saveTraining={saveTraining} cust={row.value} />,\r\n      filterable: false,\r\n      sortable: false\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Addcustomer saveCustomer={saveCustomer} />\r\n      <ReactTable filterable={true} data={customers} columns={columns} /> \r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Customer deleted\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />    \r\n    </div>\r\n  )\r\n} ","import React, {useState, useEffect} from 'react';\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function Scheduler (){\r\n\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  const fetchData = () => {\r\n    fetch('https://customerrest.herokuapp.com/gettrainings')\r\n    .then(result => result.json())\r\n    .then(data => formatTrainings(data))\r\n  }\r\n\r\n  const formatTrainings = (trains) => {\r\n    setTrainings(trains.map((train) => ({\r\n      id: train.id,\r\n      title: train.activity + ', ' + train.customer.firstname + ' ' + train.customer.lastname + ', ' + train.duration + ' minutes',\r\n      start: train.date\r\n     }))\r\n     );\r\n     console.log(trainings);\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n    <FullCalendar\r\n        plugins={[ dayGridPlugin, timeGridPlugin ]}\r\n        headerToolbar={{\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\r\n        }}\r\n        initialView=\"dayGridMonth\"\r\n        events={trainings}\r\n      />\r\n    </div>\r\n  )\r\n}","import './App.css';\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route, Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Trainlist from './components/Trainlist';\nimport Frontpage from './components/Frontpage';\nimport Custlist from './components/Custlist';\nimport Scheduler from './components/Scheduler';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">\n            Personal trainer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <BrowserRouter>\n        <div>\n          <Link to=\"/\">Home</Link>{' '}\n          <Link to=\"/components/trainlist\">Training list</Link>{' '}\n          <Link to=\"/components/custlist\">Customer list</Link>{' '}\n          <Link to=\"/components/scheduler\">Training calendar</Link>{' '}\n          <Routes>\n            <Route exact path=\"/\" element={<Frontpage />} />\n            <Route path=\"/components/trainlist\" element={<Trainlist />} />\n            <Route path=\"/components/custlist\" element={<Custlist />} />\n            <Route path=\"/components/scheduler\" element={<Scheduler />} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}